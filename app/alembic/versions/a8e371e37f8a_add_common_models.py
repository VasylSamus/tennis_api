"""add common models

Revision ID: a8e371e37f8a
Revises: 446262cf0c36
Create Date: 2023-11-08 17:20:49.824046

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8e371e37f8a'
down_revision: Union[str, None] = '446262cf0c36'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=255), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('match_type', sa.Enum('SINGLE', 'DOUBLE', 'MIXED', name='matchtypeenum'), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=False),
    sa.Column('games', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum'), nullable=True),
    sa.Column('basket_sum_min', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('hand', sa.Enum('LEFT', 'RIGHT', name='handenum'), nullable=False),
    sa.Column('backhand_type', sa.Enum('ONE_HAND', 'TWO_HAND', name='backhandtypeenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_baskets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('basket', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stadiums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('surface_type', sa.Enum('CLAY', 'GRASS', 'HARD', 'CARPET', 'SYNTHETIC_GRASS', name='surfacetypeenum'), nullable=False),
    sa.Column('courts_count', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('date_to', sa.DateTime(), nullable=False),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('tournament_settings_id', sa.Integer(), nullable=True),
    sa.Column('stadium_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['stadium_id'], ['stadiums.id'], ),
    sa.ForeignKeyConstraint(['tournament_settings_id'], ['tournament_settings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_player_ranks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('matches_played', sa.Integer(), nullable=False),
    sa.Column('matches_won', sa.Integer(), nullable=False),
    sa.Column('matches_lost', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_stages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('stage_type', sa.Enum('GROUP', 'PLAYOFF', name='tournamentstagetypeenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player11_id', sa.Integer(), nullable=True),
    sa.Column('player12_id', sa.Integer(), nullable=True),
    sa.Column('player21_id', sa.Integer(), nullable=True),
    sa.Column('player22_id', sa.Integer(), nullable=True),
    sa.Column('result', sa.String(length=255), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('tournament_stage_id', sa.Integer(), nullable=True),
    sa.Column('match_source1_id', sa.Integer(), nullable=True),
    sa.Column('match_source2_id', sa.Integer(), nullable=True),
    sa.Column('is_ranking', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.Column('sets1', sa.Integer(), nullable=True),
    sa.Column('sets2', sa.Integer(), nullable=True),
    sa.Column('games1', sa.Integer(), nullable=True),
    sa.Column('games2', sa.Integer(), nullable=True),
    sa.Column('stadium_id', sa.Integer(), nullable=True),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['match_source1_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['match_source2_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['player11_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['player12_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['player21_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['player22_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['stadium_id'], ['stadiums.id'], ),
    sa.ForeignKeyConstraint(['tournament_stage_id'], ['tournament_stages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_stage_players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('tournament_stage_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['tournament_stage_id'], ['tournament_stages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('person_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'persons', ['person_id'], ['id'])
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'person_id')
    op.drop_table('tournament_stage_players')
    op.drop_table('matches')
    op.drop_table('tournament_stages')
    op.drop_table('tournament_players')
    op.drop_table('tournament_player_ranks')
    op.drop_table('tournaments')
    op.drop_table('stadiums')
    op.drop_table('player_baskets')
    op.drop_table('players')
    op.drop_table('cities')
    op.drop_table('tournament_settings')
    op.drop_table('persons')
    op.drop_table('countries')
    # ### end Alembic commands ###
